#!/bin/bash
###########################################################
#
# Copyright (C) 2010 Ingenjorsbyn AB
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
#
# Author: Anders Haal
# Date: 2009-11-24
#
# Installation include:
# - Setup users 
# - Hardning ssh
# - Turn off unwanted daemons
#
###########################################################



trap 'aborted' INT KILL HUP


function getinstalldir() {
    curdir=`pwd`
    installpath=`dirname $1`
    # Check if the path is absolut or relative
    echo $installpath | grep "^/" > /dev/null

    if [ $? -eq 0 ] ; then
         insdir=$installpath
    else
         insdir=$curdir/$installpath
    fi
    echo $insdir
}

function setifsnewline {
        CURIFS=$IFS
        IFS='
'
}

function unsetifs {
        IFS=$CURIFS
}

function postinstall () {
        postcount=`expr $postcount + 1`
        echo -e "$postcount) $1" >> $POST_INSTALL
}

function beginnew () {
    echo $1
}

function begin () {
    echo -n $1
}

function end () {
    echo  ".... Done " $1
}
function getout {
    echo "Fix your installation errors and re-run $0"
    #cleanup
    exit
}

function errormsg () {
    echo $1 "... Error"
}

function warnmsg () {
    echo " $1" "... Warning"
}

function progress () {
    echo $1 "... OK"
}

function headline() {
    echo
    echo -en "\\033[1;34m"
    echo $@
    str=`echo $@ |  sed -e "s/ /_/g"`
    len=`expr length $str `  
    while [ $len -ne 0 ]
    do 
        echo -n = 
        len=`expr $len - 1 ` 
    done
    echo -en "\\033[0;39m"
    echo
}

function getdate() {
    date +'%Y%m%d%H%M'
}

function checkpackage() {
  rpm -q $1 >/dev/null
  if [ $? -ne 0 ] ; then
    echo "Package $1 is missing - exiting"
    exit 1
  fi 
}

function usage {
    echo "Usage: $0: -U user -I directory -J java_home "
    echo "-u show usage"
    echo "-U the user name to install bischeck as and run the daemon as - default nagios"
    echo "-J java home directory - default is none"
    echo "-I installation directory for bischeck - default /opt/socbox/addons/bischeck"
}


scriptname=`basename $0`
tempdir=`mktemp -d`

#
# Setup environment
#


#
# Read command line options
#
# Default - do nothing
#

USERINIT=nagios
NAGIOSHOST=localhost
BISHOME="/opt/socbox/addons/bischeck"
JAVA_HOME=""
unistall=false

VERSION=$(basename `pwd` | sed -e "s/^.*-//")

if [ $# -eq 0 ] ; then
    usage
    exit 0
fi

echo "Welcome to bischeck $VERSION installer"
echo "===================================="
echo "Copyright IngenjÃ¶rsbyn AB 2010"
echo "Licensed under GPL version 2"

while getopts U:H:I:J:uR: name
do
    case $name in

        U)  USERINIT="$OPTARG";;
        H)  NAGIOSHOST="$OPTARG";;
        J)  JAVA_HOME="$OPTARG";;
        I)  BISHOME="$OPTARG";;
        R)  uninstall=true;;
        u)  usage; exit 0;;
    esac
done

shift $(($OPTIND - 1))

if [ "x$uninstall" = "xtrue" ] ; then
  echo uninstall
  exit 0
fi

headline "Pre-installation verification"

echo "Checking software dependencies"

checkpackage sqlite
checkpackage javasqlite

echo "All software installed"


id $USERINIT > /dev/null 2>&1
if [ $? -ne 0 ] ; then
   errormsg "User $USERINIT do not exists"
   initerror=true
else 
   echo "$USERINIT exists"
fi

if [ -d $BISHOME ] ; then
   errormsg "Directory $BISHOME already exists"
   initerror=true
else 
   echo "Directory $BISHOME do not exists"
fi

if [ -f $JAVA_HOME/bin/java ] ; then
   errormsg "java do not exists in $JAVA_HOME/bin"
   initerror=true
else 
   echo "java exists"
fi
  

if [ "$initerror" = "true" ] ; then
   getout
else 
    echo "Pre-installation completed successful"
fi

headline "Do installation"
if [ ! -d $BISHOME ] ; then
    echo "Create installation directory $BISHOME"
    mkdir -p $BISHOME
    mkdir $BISHOME/bin
    mkdir $BISHOME/customlib
    
    echo "Copy files to installation directory"
    cp -a lib $BISHOME
    cp bis*.jar $BISHOME/lib
    cp -a resources $BISHOME
    echo $VERSION $BISHOME/version.txt
    
    echo "Parse all script files"
    # Parse all shell scripts
    for i in `ls scripts/*.template` ; do
      cat  $i| sed -e "s#%BISHOME%#$BISHOME#g" \
        -e "s#%VERSION%#$VERSION#g" \
        -e "s#%USERINIT%#$USERINIT#g" \
        -e "s#%JAVA_HOME%#$JAVA_HOME#g" > $BISHOME/bin/`basename ${i%\.template}`
    done
    chmod 755 $BISHOME/bin/* 

    echo "Install init.d script bischeckd in /etc/init.d"
    cp $BISHOME/bin/bischeckd /etc/init.d
    chmod 755 /etc/init.d/bischeckd
    chkconfig --add bischeckd
    
    echo "Create configuration databases"
    $BISHOME/bin/bischeck NscaConfig create | sqlite3 $BISHOME/bischeck.conf
    $BISHOME/bin/bischeck threshold.Twenty4HourThreshold create | sqlite3 $BISHOME/24threshold.conf
    
    echo "Change ownership and permissions to install user $USERINIT"
    #Create bischeck.conf
    
    #Chown
    chown -R $USERINIT:`id -gn $USERINIT` $BISHOME
    echo "Installations complete"
else
   errormsg "Directory $BISHOME already exists"
   initerror=true
   getout
fi
